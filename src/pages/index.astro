---
        import Nav from '../components/Nav.astro'
        import Footer from '../components/Footer.astro'
        import Ecosystem from '../components/Ecosystem.astro'

        import Layout from '../layouts/Layout.astro';
        import logo from '/images/logo.svg'
        import logoHor from '/images/logo-hor.svg'
        import lettering from '/images/logo-lettering.webp'

        import { Content as Manifesto } from '../data/manifesto.md'
        import { Content as Core } from '../data/core.labs.md'
        import { Content as Cedar } from '../data/cedar.labs.md'

        const teamMembers = await Astro.glob('../data/*.team.json')
        const artMembers = await Astro.glob('../data/*.art.json')

        teamMembers.sort((a, b) => a.order - b.order)
        artMembers.sort((a, b) => a.order - b.order)

        const getTwitterLink = (handle) => {
        return `https://twitter.com/${handle.slice(1)}`
        }

        ---

<Layout title="Underground Society NFT">
    <div id="hero" class="hero min-h-screen bg-fixed bg-[url('/images/bg2.gif')]">
        <div class="hero-overlay backdrop-contrast-125 backdrop-brightness-125 bg-opacity-20"></div>
        <div class="hero-content text-center text-neutral-content h-full items-end show-on-scroll">
            <a href="#manifesto" class="btn btn-primary shadow mb-8 motion-safe:animate-bounce">Get Started</a>
        </div>
    </div>
    <main>
        <Nav />
        <div id="manifesto" class="min-h-screen scroll-mt-[4rem] p-4 show-on-scroll">
            <Manifesto/>
        </div>

        <div id="labs" class="scroll-mt-[4rem] h-fit mb-10 p-4">
            <h1>Labs</h1>
            <div class="flex gap-4 justify-around flex-wrap">
                <Core/>
                <div class="flex flex-col gap-2 items-center">
                <Cedar/>
                    <a target="_blank" href="https://cedar.undergroundsociety.xyz"
                        class="btn btn-primary w-fit">
                        <span>Lean more <i class="fa-solid fa-arrow-up-right-from-square"></i></span>
                    </a>
                </div>
            </div>
        </div>

        <div id="team" class="scroll-mt-[4rem] h-fit mb-10 p-4">
            <h1>Core team</h1>

            <div class="flex flex-wrap gap-8 w-full md:w-3/4 justify-center mx-auto">
                {teamMembers.map(m => (
                <div client:visible class="card w-96 bg-base-100 shadow-xl show-on-scroll">
                    <figure><img src={m.avatarUrl} alt="avatar"/></figure>
                    <div class="card-body">
                        <h2 class="card-title">{m.name}</h2>
                        <div class="flex justify-between">
                            <span class="badge badge-lg">{m.job}</span>
                            <a href={getTwitterLink(m.twitter)} target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    class="fill-current hover:fill-secondary">
                                <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path>
                            </svg>
                        </a>
                    </div>
                    <p class="prose">{m.description}</p>
                </div>
            </div>
            )
            )}
        </div>
        </div>

        <div id="design" class="scroll-mt-[4rem] h-fit mb-10 p-4">
            <h1>Art team</h1>

            <div class="flex flex-wrap gap-8 w-full md:w-3/4 justify-center mx-auto">
                {artMembers.map(m => (
                <div client:visible class="card w-96 bg-base-100 shadow-xl show-on-scroll">
                    <figure><img src={m.avatarUrl} alt="avatar"/></figure>
                    <div class="card-body">
                        <h2 class="card-title">{m.name}</h2>
                        <div class="flex justify-between">
                            <span class="badge badge-lg">{m.job}</span>
                            <a href={getTwitterLink(m.twitter)} target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 class="fill-current hover:fill-secondary">
                                <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path>
                            </svg>
                            </a>
                        </div>
                        <p class="prose">{m.description}</p>
                    </div>
                </div>
            )
            )}
            </div>
        </div>

        <div id="ecosystem" class="scroll-mt-[4rem] h-fit mb-10 p-4">
            <h1>Ecosystem</h1>
            <Ecosystem />
            
        </div>

    <Footer />
        </main>
        </Layout>

<script defer>
const callback = function (entries) {
    entries.forEach((entry) => {

        if (entry.isIntersecting) {
            entry.target.classList.add("motion-safe:animate-fade-in-down");
        } else {
            entry.target.classList.remove("motion-safe:animate-fade-in-down");
        }
    });
};

const observer = new IntersectionObserver(callback);

const targets = document.querySelectorAll(".show-on-scroll");
targets.forEach(function (target) {
    target.classList.add("opacity-0");
    observer.observe(target);
});

const IdSections = ["manifesto", "labs", "team", "ecosystem"]
const currentSection = (sections) => {
    sections.forEach((section) =>{
        const navSection = document.getElementById(`nav-section-${section.target.id}`)
        if (section.intersectionRatio > 0.3){
            navSection.classList.add("activeSection")}
        else{
            navSection.classList.remove("activeSection")
        }
    })
}
const navObserver = new IntersectionObserver(currentSection, {threshold: 0.3})

IdSections.forEach((id)=>{
    const sections = document.getElementById(id)
    navObserver.observe(sections)
})

</script>